'use server';

/**
 * @fileOverview AI flow to generate insightful cards that highlight potential risks or opportunities.
 *
 * - generateInsightCard - A function that handles the generation of insight cards.
 * - GenerateInsightCardInput - The input type for the generateInsightCard function.
 * - GenerateInsightCardOutput - The return type for the generateInsightCard function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateInsightCardInputSchema = z.object({
  teamData: z
    .string()
    .describe('The team data, including metrics, feedback, and recent events.'),
});
export type GenerateInsightCardInput = z.infer<typeof GenerateInsightCardInputSchema>;

const GenerateInsightCardOutputSchema = z.object({
  insightCards: z.array(
    z.object({
      title: z.string().describe('The title of the insight card.'),
      description: z.string().describe('A detailed description of the insight.'),
      type: z.enum(['risk', 'opportunity']).describe('The type of insight.'),
      priority: z.enum(['high', 'medium', 'low']).describe('The priority of the insight.'),
    })
  ).describe('A list of insight cards generated by the AI.'),
});
export type GenerateInsightCardOutput = z.infer<typeof GenerateInsightCardOutputSchema>;

export async function generateInsightCard(input: GenerateInsightCardInput): Promise<GenerateInsightCardOutput> {
  return generateInsightCardFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateInsightCardPrompt',
  input: {schema: GenerateInsightCardInputSchema},
  output: {schema: GenerateInsightCardOutputSchema},
  prompt: `You are an AI assistant that analyzes team data and generates insightful cards for tech leads.

  Based on the following team data, generate a list of insight cards that highlight potential risks (like burnout, critical dependencies) or opportunities (like mentoring, skill sharing).
  Each insight card should have a title, a detailed description, a type (risk or opportunity), and a priority (high, medium, or low).

  Team Data: {{{teamData}}}
  `,
});

const generateInsightCardFlow = ai.defineFlow(
  {
    name: 'generateInsightCardFlow',
    inputSchema: GenerateInsightCardInputSchema,
    outputSchema: GenerateInsightCardOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
